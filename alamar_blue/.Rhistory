seq <- paste(seqToProcess, collapse='')
seq
reversed_seq <- seq
reversed_seq
seq< - "AGAAAACUUGUAGAAGGGCAAGUAUUAGUAGAAGGUGAAGGAGUAUGGUUUCGUGCACUCGUCUGUACU"
seq <- "AGAAAACUUGUAGAAGGGCAAGUAUUAGUAGAAGGUGAAGGAGUAUGGUUUCGUGCACUCGUCUGUACU"
# extract codons each as a separate string/observation
codons <- str_extract_all(seq, "[A-Z]{3}")
codons <- unlist(codons)
# make a data frame out of this. did this initially for error analysis
# but may serve useful for expansion in the future
conv_df <- data.frame(codons)
# add amino_acid variables with correct ID for each codon
conv_df[ which(conv_df$codons == "UUU"), "amino_acid"] <- "F"
conv_df[ which(conv_df$codons == "UUC"), "amino_acid"] <- "F"
conv_df[ which(conv_df$codons == "UUA"), "amino_acid"] <- "L"
conv_df[ which(conv_df$codons == "UUG"), "amino_acid"] <- "L"
conv_df[ which(conv_df$codons == "UCU"), "amino_acid"] <- "S"
conv_df[ which(conv_df$codons == "UCC"), "amino_acid"] <- "S"
conv_df[ which(conv_df$codons == "UCA"), "amino_acid"] <- "S"
conv_df[ which(conv_df$codons == "UCG"), "amino_acid"] <- "S"
conv_df[ which(conv_df$codons == "UAU"), "amino_acid"] <- "Y"
conv_df[ which(conv_df$codons == "UAC"), "amino_acid"] <- "Y"
conv_df[ which(conv_df$codons == "UAA"), "amino_acid"] <- "Stop"
conv_df[ which(conv_df$codons == "UAG"), "amino_acid"] <- "Stop"
conv_df[ which(conv_df$codons == "UGU"), "amino_acid"] <- "C"
conv_df[ which(conv_df$codons == "UGC"), "amino_acid"] <- "C"
conv_df[ which(conv_df$codons == "UGA"), "amino_acid"] <- "Stop"
conv_df[ which(conv_df$codons == "UGG"), "amino_acid"] <- "W"
conv_df[ which(conv_df$codons == "CUU"), "amino_acid"] <- "L"
conv_df[ which(conv_df$codons == "CUC"), "amino_acid"] <- "L"
conv_df[ which(conv_df$codons == "CUA"), "amino_acid"] <- "L"
conv_df[ which(conv_df$codons == "CUG"), "amino_acid"] <- "L"
conv_df[ which(conv_df$codons == "CCU"), "amino_acid"] <- "P"
conv_df[ which(conv_df$codons == "CCC"), "amino_acid"] <- "P"
conv_df[ which(conv_df$codons == "CCA"), "amino_acid"] <- "P"
conv_df[ which(conv_df$codons == "CCG"), "amino_acid"] <- "P"
conv_df[ which(conv_df$codons == "CAU"), "amino_acid"] <- "H"
conv_df[ which(conv_df$codons == "CAC"), "amino_acid"] <- "H"
conv_df[ which(conv_df$codons == "CAA"), "amino_acid"] <- "Q"
conv_df[ which(conv_df$codons == "CAG"), "amino_acid"] <- "Q"
conv_df[ which(conv_df$codons == "CGU"), "amino_acid"] <- "R"
conv_df[ which(conv_df$codons == "CGC"), "amino_acid"] <- "R"
conv_df[ which(conv_df$codons == "CGA"), "amino_acid"] <- "R"
conv_df[ which(conv_df$codons == "CGG"), "amino_acid"] <- "R"
conv_df[ which(conv_df$codons == "AUU"), "amino_acid"] <- "I"
conv_df[ which(conv_df$codons == "AUC"), "amino_acid"] <- "I"
conv_df[ which(conv_df$codons == "AUA"), "amino_acid"] <- "I"
conv_df[ which(conv_df$codons == "AUG"), "amino_acid"] <- "M"
conv_df[ which(conv_df$codons == "ACU"), "amino_acid"] <- "T"
conv_df[ which(conv_df$codons == "ACC"), "amino_acid"] <- "T"
conv_df[ which(conv_df$codons == "ACA"), "amino_acid"] <- "T"
conv_df[ which(conv_df$codons == "ACG"), "amino_acid"] <- "T"
conv_df[ which(conv_df$codons == "AAU"), "amino_acid"] <- "N"
conv_df[ which(conv_df$codons == "AAC"), "amino_acid"] <- "N"
conv_df[ which(conv_df$codons == "AAA"), "amino_acid"] <- "K"
conv_df[ which(conv_df$codons == "AAG"), "amino_acid"] <- "K"
conv_df[ which(conv_df$codons == "AGU"), "amino_acid"] <- "S"
conv_df[ which(conv_df$codons == "AGC"), "amino_acid"] <- "S"
conv_df[ which(conv_df$codons == "AGA"), "amino_acid"] <- "R"
conv_df[ which(conv_df$codons == "AGG"), "amino_acid"] <- "R"
conv_df[ which(conv_df$codons == "GUU"), "amino_acid"] <- "V"
conv_df[ which(conv_df$codons == "GUC"), "amino_acid"] <- "V"
conv_df[ which(conv_df$codons == "GUA"), "amino_acid"] <- "V"
conv_df[ which(conv_df$codons == "GUG"), "amino_acid"] <- "V"
conv_df[ which(conv_df$codons == "GCU"), "amino_acid"] <- "A"
conv_df[ which(conv_df$codons == "GCC"), "amino_acid"] <- "A"
conv_df[ which(conv_df$codons == "GCA"), "amino_acid"] <- "A"
conv_df[ which(conv_df$codons == "GCG"), "amino_acid"] <- "A"
conv_df[ which(conv_df$codons == "GAU"), "amino_acid"] <- "D"
conv_df[ which(conv_df$codons == "GAC"), "amino_acid"] <- "D"
conv_df[ which(conv_df$codons == "GAA"), "amino_acid"] <- "E"
conv_df[ which(conv_df$codons == "GAG"), "amino_acid"] <- "E"
conv_df[ which(conv_df$codons == "GGU"), "amino_acid"] <- "G"
conv_df[ which(conv_df$codons == "GGC"), "amino_acid"] <- "G"
conv_df[ which(conv_df$codons == "GGA"), "amino_acid"] <- "G"
conv_df[ which(conv_df$codons == "GGG"), "amino_acid"] <- "G"
# create a single string out of the amino_acid variable
# note: this adds "Stop" but rosalind problems don't like this
aminos <- paste(conv_df$amino_acid, collapse='')
aminos
seq
codons
seq1 <- "AATTGGAAGCAAATGACATCACAGCAGGTCAGAGAAAAAGGGTTGAGCGGCAGGCACCCAGAGTAGTAGG
TCTTTGGCATTAGGAGCTTGAGCCCAGACGGCCCTAGCAGGGACCCCAGCGCCCGAGAGACCATGCAGAG
GTCGCCTCTGGAAAAGGCCAGCGTTGTCTCCAAACTTTTTTTCAGCTGGACCAGACCAATTTTGAGGAAA
GGATACAGACAGCGCCTGGAATTGTCAGACATATACCAAATCCCTTCTGTTGATTCTGCTGACAATCTAT
CTGAAAAATTGGAAAGAGAATGGGATAGAGAGCTGGCTTCAAAGAAAAATCCTAAACTCATTAATGCCCT
TCGGCGATGTTTTTTCTGGAGATTTATGTTCTATGGAATCTTTTTATATTTAGGGGAAGTCACCAAAGCA
GTACAGCCTCTCTTACTGGGAAGAATCATAGCTTCCTATGACCCGGATAACAAGGAGGAACGCTCTATCG
CGATTTATCTAGGCATAGGCTTATGCCTTCTCTTTATTGTGAGGACACTGCTCCTACACCCAGCCATTTT
TGGCCTTCATCACATTGGAATGCAGATGAGAATAGCTATGTTTAGTTTGATTTATAAGAAGACTTTAAAG
CTGTCAAGCCGTGTTCTAGATAAAATAAGTATTGGACAACTTGTTAGTCTCCTTTCCAACAACCTGAACA
AATTTGATGAAGGACTTGCATTGGCACATTTCGTGTGGATCGCTCCTTTGCAAGTGGCACTCCTCATGGG
GCTAATCTGGGAGTTGTTACAGGCGTCTGCCTTCTGTGGACTTGGTTTCCTGATAGTCCTTGCCCTTTTT
CAGGCTGGGCTAGGGAGAATGATGATGAAGTACAGAGATCAGAGAGCTGGGAAGATCAGTGAAAGACTTG
TGATTACCTCAGAAATGATTGAAAATATCCAATCTGTTAAGGCATACTGCTGGGAAGAAGCAATGGAAAA
AATGATTGAAAACTTAAGACAAACAGAACTGAAACTGACTCGGAAGGCAGCCTATGTGAGATACTTCAAT
AGCTCAGCCTTCTTCTTCTCAGGGTTCTTTGTGGTGTTTTTATCTGTGCTTCCCTATGCACTAATCAAAG
GAATCATCCTCCGGAAAATATTCACCACCATCTCATTCTGCATTGTTCTGCGCATGGCGGTCACTCGGCA
ATTTCCCTGGGCTGTACAAACATGGTATGACTCTCTTGGAGCAATAAACAAAATACAGGATTTCTTACAA
AAGCAAGAATATAAGACATTGGAATATAACTTAACGACTACAGAAGTAGTGATGGAGAATGTAACAGCCT
TCTGGGAGGAGGGATTTGGGGAATTATTTGAGAAAGCAAAACAAAACAATAACAATAGAAAAACTTCTAA
TGGTGATGACAGCCTCTTCTTCAGTAATTTCTCACTTCTTGGTACTCCTGTCCTGAAAGATATTAATTTC
AAGATAGAAAGAGGACAGTTGTTGGCGGTTGCTGGATCCACTGGAGCAGGCAAGACTTCACTTCTAATGG
TGATTATGGGAGAACTGGAGCCTTCAGAGGGTAAAATTAAGCACAGTGGAAGAATTTCATTCTGTTCTCA
GTTTTCCTGGATTATGCCTGGCACCATTAAAGAAAATATCATCTTTGGTGTTTCCTATGATGAATATAGA
TACAGAAGCGTCATCAAAGCATGCCAACTAGAAGAGGACATCTCCAAGTTTGCAGAGAAAGACAATATAG
TTCTTGGAGAAGGTGGAATCACACTGAGTGGAGGTCAACGAGCAAGAATTTCTTTAGCAAGAGCAGTATA
CAAAGATGCTGATTTGTATTTATTAGACTCTCCTTTTGGATACCTAGATGTTTTAACAGAAAAAGAAATA
TTTGAAAGCTGTGTCTGTAAACTGATGGCTAACAAAACTAGGATTTTGGTCACTTCTAAAATGGAACATT
TAAAGAAAGCTGACAAAATATTAATTTTGCATGAAGGTAGCAGCTATTTTTATGGGACATTTTCAGAACT
CCAAAATCTACAGCCAGACTTTAGCTCAAAACTCATGGGATGTGATTCTTTCGACCAATTTAGTGCAGAA
AGAAGAAATTCAATCCTAACTGAGACCTTACACCGTTTCTCATTAGAAGGAGATGCTCCTGTCTCCTGGA
CAGAAACAAAAAAACAATCTTTTAAACAGACTGGAGAGTTTGGGGAAAAAAGGAAGAATTCTATTCTCAA
TCCAATCAACTCTATACGAAAATTTTCCATTGTGCAAAAGACTCCCTTACAAATGAATGGCATCGAAGAG
GATTCTGATGAGCCTTTAGAGAGAAGGCTGTCCTTAGTACCAGATTCTGAGCAGGGAGAGGCGATACTGC
CTCGCATCAGCGTGATCAGCACTGGCCCCACGCTTCAGGCACGAAGGAGGCAGTCTGTCCTGAACCTGAT
GACACACTCAGTTAACCAAGGTCAGAACATTCACCGAAAGACAACAGCATCCACACGAAAAGTGTCACTG
GCCCCTCAGGCAAACTTGACTGAACTGGATATATATTCAAGAAGGTTATCTCAAGAAACTGGCTTGGAAA
TAAGTGAAGAAATTAACGAAGAAGACTTAAAGGAGTGCTTTTTTGATGATATGGAGAGCATACCAGCAGT
GACTACATGGAACACATACCTTCGATATATTACTGTCCACAAGAGCTTAATTTTTGTGCTAATTTGGTGC
TTAGTAATTTTTCTGGCAGAGGTGGCTGCTTCTTTGGTTGTGCTGTGGCTCCTTGGAAACACTCCTCTTC
AAGACAAAGGGAATAGTACTCATAGTAGAAATAACAGCTATGCAGTGATTATCACCAGCACCAGTTCGTA
TTATGTGTTTTACATTTACGTGGGAGTAGCCGACACTTTGCTTGCTATGGGATTCTTCAGAGGTCTACCA
CTGGTGCATACTCTAATCACAGTGTCGAAAATTTTACACCACAAAATGTTACATTCTGTTCTTCAAGCAC
CTATGTCAACCCTCAACACGTTGAAAGCAGGTGGGATTCTTAATAGATTCTCCAAAGATATAGCAATTTT
GGATGACCTTCTGCCTCTTACCATATTTGACTTCATCCAGTTGTTATTAATTGTGATTGGAGCTATAGCA
GTTGTCGCAGTTTTACAACCCTACATCTTTGTTGCAACAGTGCCAGTGATAGTGGCTTTTATTATGTTGA
GAGCATATTTCCTCCAAACCTCACAGCAACTCAAACAACTGGAATCTGAAGGCAGGAGTCCAATTTTCAC
TCATCTTGTTACAAGCTTAAAAGGACTATGGACACTTCGTGCCTTCGGACGGCAGCCTTACTTTGAAACT
CTGTTCCACAAAGCTCTGAATTTACATACTGCCAACTGGTTCTTGTACCTGTCAACACTGCGCTGGTTCC
AAATGAGAATAGAAATGATTTTTGTCATCTTCTTCATTGCTGTTACCTTCATTTCCATTTTAACAACAGG
AGAAGGAGAAGGAAGAGTTGGTATTATCCTGACTTTAGCCATGAATATCATGAGTACATTGCAGTGGGCT
GTAAACTCCAGCATAGATGTGGATAGCTTGATGCGATCTGTGAGCCGAGTCTTTAAGTTCATTGACATGC
CAACAGAAGGTAAACCTACCAAGTCAACCAAACCATACAAGAATGGCCAACTCTCGAAAGTTATGATTAT
TGAGAATTCACACGTGAAGAAAGATGACATCTGGCCCTCAGGGGGCCAAATGACTGTCAAAGATCTCACA
GCAAAATACACAGAAGGTGGAAATGCCATATTAGAGAACATTTCCTTCTCAATAAGTCCTGGCCAGAGGG
TGGGCCTCTTGGGAAGAACTGGATCAGGGAAGAGTACTTTGTTATCAGCTTTTTTGAGACTACTGAACAC
TGAAGGAGAAATCCAGATCGATGGTGTGTCTTGGGATTCAATAACTTTGCAACAGTGGAGGAAAGCCTTT
GGAGTGATACCACAGAAAGTATTTATTTTTTCTGGAACATTTAGAAAAAACTTGGATCCCTATGAACAGT
GGAGTGATCAAGAAATATGGAAAGTTGCAGATGAGGTTGGGCTCAGATCTGTGATAGAACAGTTTCCTGG
GAAGCTTGACTTTGTCCTTGTGGATGGGGGCTGTGTCCTAAGCCATGGCCACAAGCAGTTGATGTGCTTG
GCTAGATCTGTTCTCAGTAAGGCGAAGATCTTGCTGCTTGATGAACCCAGTGCTCATTTGGATCCAGTAA
CATACCAAATAATTAGAAGAACTCTAAAACAAGCATTTGCTGATTGCACAGTAATTCTCTGTGAACACAG
GATAGAAGCAATGCTGGAATGCCAACAATTTTTGGTCATAGAAGAGAACAAAGTGCGGCAGTACGATTCC
ATCCAGAAACTGCTGAACGAGAGGAGCCTCTTCCGGCAAGCCATCAGCCCCTCCGACAGGGTGAAGCTCT
TTCCCCACCGGAACTCAAGCAAGTGCAAGTCTAAGCCCCAGATTGCTGCTCTGAAAGAGGAGACAGAAGA
AGAGGTGCAAGATACAAGGCTTTAGAGAGCAGCATAAATGTTGACATGGGACATTTGCTCATGGAATTGG
AGCTCGTGGGACAGTCACCTCATGGAATTGGAGCTCGTGGAACAGTTACCTCTGCCTCAGAAAACAAGGA
TGAATTAAGTTTTTTTTTAAAAAAGAAACATTTGGTAAGGGGAATTGAGGACACTGATATGGGTCTTGAT
AAATGGCTTCCTGGCAATAGTCAAATTGTGTGAAAGGTACTTCAAATCCTTGAAGATTTACCACTTGTGT
TTTGCAAGCCAGATTTTCCTGAAAACCCTTGCCATGTGCTAGTAATTGGAAAGGCAGCTCTAAATGTCAA
TCAGCCTAGTTGATCAGCTTATTGTCTAGTGAAACTCGTTAATTTGTAGTGTTGGAGAAGAACTGAAATC
ATACTTCTTAGGGTTATGATTAAGTAATGATAACTGGAAACTTCAGCGGTTTATATAAGCTTGTATTCCT
TTTTCTCTCCTCTCCCCATGATGTTTAGAAACACAACTATATTGTTTGCTAAGCATTCCAACTATCTCAT
TTCCAAGCAAGTATTAGAATACCACAGGAACCACAAGACTGCACATCAAAATATGCCCCATTCAACATCT
AGTGAGCAGTCAGGAAAGAGAACTTCCAGATCCTGGAAATCAGGGTTAGTATTGTCCAGGTCTACCAAAA
ATCTCAATATTTCAGATAATCACAATACATCCCTTACCTGGGAAAGGGCTGTTATAATCTTTCACAGGGG
ACAGGATGGTTCCCTTGATGAAGAAGTTGATATGCCTTTTCCCAACTCCAGAAAGTGACAAGCTCACAGA
CCTTTGAACTAGAGTTTAGCTGGAAAAGTATGTTAGTGCAAATTGTCACAGGACAGCCCTTCTTTCCACA
GAAGCTCCAGGTAGAGGGTGTGTAAGTAGATAGGCCATGGGCACTGTGGGTAGACACACATGAAGTCCAA
GCATTTAGATGTATAGGTTGATGGTGGTATGTTTTCAGGCTAGATGTATGTACTTCATGCTGTCTACACT
AAGAGAGAATGAGAGACACACTGAAGAAGCACCAATCATGAATTAGTTTTATATGCTTCTGTTTTATAAT
TTTGTGAAGCAAAATTTTTTCTCTAGGAAATATTTATTTTAATAATGTTTCAAACATATATAACAATGCT
GTATTTTAAAAGAATGATTATGAATTACATTTGTATAAAATAATTTTTATATTTGAAATATTGACTTTTT
ATGGCACTAGTATTTCTATGAAATATTATGTTAAAACTGGGACAGGGGAGAACCTAGGGTGATATTAACC
AGGGGCCATGAATCACCTTTTGGTCTGGAGGGAAGCCTTGGGGCTGATGCAGTTGTTGCCCACAGCTGTA
TGATTCCCAGCCAGCACAGCCTCTTAGATGCAGTTCTGAAGAAGATGGTACCACCAGTCTGACTGTTTCC
ATCAAGGGTACACTGCCTTCTCAACTCCAAACTGACTCTTAAGAAGACTGCATTATATTTATTACTGTAA
GAAAATATCACTTGTCAATAAAATCCATACATTTGTGTGAAA"
seq2 <- "AATTGGAAGCAAATGACATCACAGCAGGTCAGAGAAAAAGGGTTGAGCGGCAGGCACCCAGAGTAGTAGGTCTTTGGCAT
TAGGAGCTTGAGCCCAGACGGCCCTAGCAGGGACCCCAGCGCCCGAGAGACCATGCAGAGGTCGCCTCTGGAAAAGGCCA
GCGTTGTCTCCAAACTTTTTTTCAGCTGGACCAGACCAATTTTGAGGAAAGGATACAGACAGCGCCTGGAATTGTCAGAC
ATATACCAAATCCCTTCTGTTGATTCTGCTGACAATCTATCTGAAAAATTGGAAAGAGAATGGGATAGAGAGCTGGCTTC
AAAGAAAAATCCTAAACTCATTAATGCCCTTCGGCGATGTTTTTTCTGGAGATTTATGTTCTATGGAATCTTTTTATATT
TAGGGGAAGTCACCAAAGCAGTACAGCCTCTCTTACTGGGAAGAATCATAGCTTCCTATGACCCGGATAACAAGGAGGAA
CGCTCTATCGCGATTTATCTAGGCATAGGCTTATGCCTTCTCTTTATTGTGAGGACACTGCTCCTACACCCAGCCATTTT
TGGCCTTCATCACATTGGAATGCAGATGAGAATAGCTATGTTTAGTTTGATTTATAAGAAGACTTTAAAGCTGTCAAGCC
GTGTTCTAGATAAAATAAGTATTGGACAACTTGTTAGTCTCCTTTCCAACAACCTGAACAAATTTGATGAAGGACTTGCA
TTGGCACATTTCGTGTGGATCGCTCCTTTGCAAGTGGCACTCCTCATGGGGCTAATCTGGGAGTTGTTACAGGCGTCTGC
CTTCTGTGGACTTGGTTTCCTGATAGTCCTTGCCCTTTTTCAGGCTGGGCTAGGGAGAATGATGATGAAGTACAGAGATC
AGAGAGCTGGGAAGATCAGTGAAAGACTTGTGATTACCTCAGAAATGATTGAAAATATCCAATCTGTTAAGGCATACTGC
TGGGAAGAAGCAATGGAAAAAATGATTGAAAACTTAAGACAAACAGAACTGAAACTGACTCGGAAGGCAGCCTATGTGAG
ATACTTCAATAGCTCAGCCTTCTTCTTCTCAGGGTTCTTTGTGGTGTTTTTATCTGTGCTTCCCTATGCACTAATCAAAG
GAATCATCCTCCGGAAAATATTCACCACCATCTCATTCTGCATTGTTCTGCGCATGGCGGTCACTCGGCAATTTCCCTGG
GCTGTACAAACATGGTATGACTCTCTTGGAGCAATAAACAAAATACAGGATTTCTTACAAAAGCAAGAATATAAGACATT
GGAATATAACTTAACGACTACAGAAGTAGTGATGGAGAATGTAACAGCCTTCTGGGAGGAGGGATTTGGGGAATTATTTG
AGAAAGCAAAACAAAACAATAACAATAGAAAAACTTCTAATGGTGATGACAGCCTCTTCTTCAGTAATTTCTCACTTCTT
GGTACTCCTGTCCTGAAAGATATTAATTTCAAGATAGAAAGAGGACAGTTGTTGGCGGTTGCTGGATCCACTGGAGCAGG
CAAGACTTCACTTCTAATGGTGATTATGGGAGAACTGGAGCCTTCAGAGGGTAAAATTAAGCACAGTGGAAGAATTTCAT
TCTGTTCTTAGTTTTCCTGGATTATGCCTGGCACCATTAAAGAAAATATCATCTTTGGTGTTTCCTATGATGAATATAGA
TACAGAAGCGTCATCAAAGCATGCCAACTAGAAGAGGACATCTCCAAGTTTGCAGAGAAAGACAATATAGTTCTTGGAGA
AGGTGGAATCACACTGAGTGGAGGTCAACGAGCAAGAATTTCTTTAGCAAGAGCAGTATACAAAGATGCTGATTTGTATT
TATTAGACTCTCCTTTTGGATACCTAGATGTTTTAACAGAAAAAGAAATATTTGAAAGCTGTGTCTGTAAACTGATGGCT
AACAAAACTAGGATTTTGGTCACTTCTAAAATGGAACATTTAAAGAAAGCTGACAAAATATTAATTTTGCATGAAGGTAG
CAGCTATTTTTATGGGACATTTTCAGAACTCCAAAATCTACAGCCAGACTTTAGCTCAAAACTCATGGGATGTGATTCTT
TCGACCAATTTAGTGCAGAAAGAAGAAATTCAATCCTAACTGAGACCTTACACCGTTTCTCATTAGAAGGAGATGCTCCT
GTCTCCTGGACAGAAACAAAAAAACAATCTTTTAAACAGACTGGAGAGTTTGGGGAAAAAAGGAAGAATTCTATTCTCAA
TCCAATCAACTCTATACGAAAATTTTCCATTGTGCAAAAGACTCCCTTACAAATGAATGGCATCGAAGAGGATTCTGATG
AGCCTTTAGAGAGAAGGCTGTCCTTAGTACCAGATTCTGAGCAGGGAGAGGCGATACTGCCTCGCATCAGCGTGATCAGC
ACTGGCCCCACGCTTCAGGCACGAAGGAGGCAGTCTGTCCTGAACCTGATGACACACTCAGTTAACCAAGGTCAGAACAT
TCACCGAAAGACAACAGCATCCACACGAAAAGTGTCACTGGCCCCTCAGGCAAACTTGACTGAACTGGATATATATTCAA
GAAGGTTATCTCAAGAAACTGGCTTGGAAATAAGTGAAGAAATTAACGAAGAAGACTTAAAGGAGTGCTTTTTTGATGAT
ATGGAGAGCATACCAGCAGTGACTACATGGAACACATACCTTCGATATATTACTGTCCACAAGAGCTTAATTTTTGTGCT
AATTTGGTGCTTAGTAATTTTTCTGGCAGAGGTGGCTGCTTCTTTGGTTGTGCTGTGGCTCCTTGGAAACACTCCTCTTC
AAGACAAAGGGAATAGTACTCATAGTAGAAATAACAGCTATGCAGTGATTATCACCAGCACCAGTTCGTATTATGTGTTT
TACATTTACGTGGGAGTAGCCGACACTTTGCTTGCTATGGGATTCTTCAGAGGTCTACCACTGGTGCATACTCTAATCAC
AGTGTCGAAAATTTTACACCACAAAATGTTACATTCTGTTCTTCAAGCACCTATGTCAACCCTCAACACGTTGAAAGCAG
GTGGGATTCTTAATAGATTCTCCAAAGATATAGCAATTTTGGATGACCTTCTGCCTCTTACCATATTTGACTTCATCCAG
TTGTTATTAATTGTGATTGGAGCTATAGCAGTTGTCGCAGTTTTACAACCCTACATCTTTGTTGCAACAGTGCCAGTGAT
AGTGGCTTTTATTATGTTGAGAGCATATTTCCTCCAAACCTCACAGCAACTCAAACAACTGGAATCTGAAGGCAGGAGTC
CAATTTTCACTCATCTTGTTACAAGCTTAAAAGGACTATGGACACTTCGTGCCTTCGGACGGCAGCCTTACTTTGAAACT
CTGTTCCACAAAGCTCTGAATTTACATACTGCCAACTGGTTCTTGTACCTGTCAACACTGCGCTGGTTCCAAATGAGAAT
AGAAATGATTTTTGTCATCTTCTTCATTGCTGTTACCTTCATTTCCATTTTAACAACAGGAGAAGGAGAAGGAAGAGTTG
GTATTATCCTGACTTTAGCCATGAATATCATGAGTACATTGCAGTGGGCTGTAAACTCCAGCATAGATGTGGATAGCTTG
ATGCGATCTGTGAGCCGAGTCTTTAAGTTCATTGACATGCCAACAGAAGGTAAACCTACCAAGTCAACCAAACCATACAA
GAATGGCCAACTCTCGAAAGTTATGATTATTGAGAATTCACACGTGAAGAAAGATGACATCTGGCCCTCAGGGGGCCAAA
TGACTGTCAAAGATCTCACAGCAAAATACACAGAAGGTGGAAATGCCATATTAGAGAACATTTCCTTCTCAATAAGTCCT
GGCCAGAGGGTGGGCCTCTTGGGAAGAACTGGATCAGGGAAGAGTACTTTGTTATCAGCTTTTTTGAGACTACTGAACAC
TGAAGGAGAAATCCAGATCGATGGTGTGTCTTGGGATTCAATAACTTTGCAACAGTGGAGGAAAGCCTTTGGAGTGATAC
CACAGAAAGTATTTATTTTTTCTGGAACATTTAGAAAAAACTTGGATCCCTATGAACAGTGGAGTGATCAAGAAATATGG
AAAGTTGCAGATGAGGTTGGGCTCAGATCTGTGATAGAACAGTTTCCTGGGAAGCTTGACTTTGTCCTTGTGGATGGGGG
CTGTGTCCTAAGCCATGGCCACAAGCAGTTGATGTGCTTGGCTAGATCTGTTCTCAGTAAGGCGAAGATCTTGCTGCTTG
ATGAACCCAGTGCTCATTTGGATCCAGTAACATACCAAATAATTAGAAGAACTCTAAAACAAGCATTTGCTGATTGCACA
GTAATTCTCTGTGAACACAGGATAGAAGCAATGCTGGAATGCCAACAATTTTTGGTCATAGAAGAGAACAAAGTGCGGCA
GTACGATTCCATCCAGAAACTGCTGAACGAGAGGAGCCTCTTCCGGCAAGCCATCAGCCCCTCCGACAGGGTGAAGCTCT
TTCCCCACCGGAACTCAAGCAAGTGCAAGTCTAAGCCCCAGATTGCTGCTCTGAAAGAGGAGACAGAAGAAGAGGTGCAA
GATACAAGGCTTTAGAGAGCAGCATAAATGTTGACATGGGACATTTGCTCATGGAATTGGAGCTCGTGGGACAGTCACCT
CATGGAATTGGAGCTCGTGGAACAGTTACCTCTGCCTCAGAAAACAAGGATGAATTAAGTTTTTTTTTAAAAAAGAAACA
TTTGGTAAGGGGAATTGAGGACACTGATATGGGTCTTGATAAATGGCTTCCTGGCAATAGTCAAATTGTGTGAAAGGTAC
TTCAAATCCTTGAAGATTTACCACTTGTGTTTTGCAAGCCAGATTTTCCTGAAAACCCTTGCCATGTGCTAGTAATTGGA
AAGGCAGCTCTAAATGTCAATCAGCCTAGTTGATCAGCTTATTGTCTAGTGAAACTCGTTAATTTGTAGTGTTGGAGAAG
AACTGAAATCATACTTCTTAGGGTTATGATTAAGTAATGATAACTGGAAACTTCAGCGGTTTATATAAGCTTGTATTCCT
TTTTCTCTCCTCTCCCCATGATGTTTAGAAACACAACTATATTGTTTGCTAAGCATTCCAACTATCTCATTTCCAAGCAA
GTATTAGAATACCACAGGAACCACAAGACTGCACATCAAAATATGCCCCATTCAACATCTAGTGAGCAGTCAGGAAAGAG
AACTTCCAGATCCTGGAAATCAGGGTTAGTATTGTCCAGGTCTACCAAAAATCTCAATATTTCAGATAATCACAATACAT
CCCTTACCTGGGAAAGGGCTGTTATAATCTTTCACAGGGGACAGGATGGTTCCCTTGATGAAGAAGTTGATATGCCTTTT
CCCAACTCCAGAAAGTGACAAGCTCACAGACCTTTGAACTAGAGTTTAGCTGGAAAAGTATGTTAGTGCAAATTGTCACA
GGACAGCCCTTCTTTCCACAGAAGCTCCAGGTAGAGGGTGTGTAAGTAGATAGGCCATGGGCACTGTGGGTAGACACACA
TGAAGTCCAAGCATTTAGATGTATAGGTTGATGGTGGTATGTTTTCAGGCTAGATGTATGTACTTCATGCTGTCTACACT
AAGAGAGAATGAGAGACACACTGAAGAAGCACCAATCATGAATTAGTTTTATATGCTTCTGTTTTATAATTTTGTGAAGC
AAAATTTTTTCTCTAGGAAATATTTATTTTAATAATGTTTCAAACATATATAACAATGCTGTATTTTAAAAGAATGATTA
TGAATTACATTTGTATAAAATAATTTTTATATTTGAAATATTGACTTTTTATGGCACTAGTATTTCTATGAAATATTATG
TTAAAACTGGGACAGGGGAGAACCTAGGGTGATATTAACCAGGGGCCATGAATCACCTTTTGGTCTGGAGGGAAGCCTTG
GGGCTGATGCAGTTGTTGCCCACAGCTGTATGATTCCCAGCCAGCACAGCCTCTTAGATGCAGTTCTGAAGAAGATGGTA
CCACCAGTCTGACTGTTTCCATCAAGGGTACACTGCCTTCTCAACTCCAAACTGACTCTTAAGAAGACTGCATTATATTT
ATTACTGTAAGAAAATATCACTTGTCAATAAAATCCATACATTTGTGTGAAA"
seq1 <- strsplit(seq1, NULL)[[1]]
seq2 <- strsplit(seq2, NULL)[[1]]
seqsdf <- data.frame(seq1, seq2)
seqsdf[ which(seqsdf$seq1 != seqsdf$seq2), "mistake"] <- 1
seqsdf[ which(seqsdf$seq1 == seqsdf$seq2), "mistake"] <- 0
mistakes <- sum(seqsdf$mistake)
mistakes
getwd()
oaList <- read.csv("~/Documents/Research Project/oa_file_list.csv")
head(head())
head(oaList)
states <- c("A", "B", "O")
test <- sample(states, size=867, replace=TRUE, prob=c(0.41, 0.40, 0.19))
states <- c("A", "B", "O")
probs <- c(.41, 0.4, .19)
test <- sample(states, size=867, replace=TRUE, prob=probs)
N <- 867          # sample size
num_scen <- 2e4  # num scenarios
states <- c("A", "B", "O")
probs <- c(.41, 0.4, .19)
simulated_polls <- sample(states, size=num_scen*N, replace=TRUE, prob=probs)
dim(simulated_polls) <- c(num_scen, N)
View(simulated_polls)
size(simulated_polls)
dim(simulated_polls)
mean(rowSums(simulated_polls == "A") > rowSums(simulated_polls == "B"))
rowSums(simulated_polls == "A")
simulated_polls == "A") > rowSums(simulated_polls == "B")
rowSums(simulated_polls == "A") > rowSums(simulated_polls == "B")
plot(cars)
```{r}
plot(cars)
library(ggplot2)
# Read in
zip_data <- read.csv("./data/zip_data_final.csv")
# Subset data for zip codes with population greater than 0. These zip codes are not important for our scoring model
subset <- zip_data[which(zip_data$population > 0 & zip_data$median_indiv_income > 2000),]
ggplot(subset, aes(population)) + geom_density(color="red", fill="red", alpha=0.4) + theme(legend.position="none") + coord_cartesian(xlim=c(0,80000))
ggplot(subset, aes(rpp, median_indiv_income)) + geom_point(color="firebrick3", fill="firebrick3", alpha=0.4) + coord_cartesian(xlim=c(75,130), ylim=c(0,150000))
ggplot(subset, aes(median_indiv_income, life_expectancy)) + geom_point(color="springgreen3", fill="springgreen3", alpha=0.3) + coord_cartesian(xlim=c(0,150000), ylim=c(55,95))
ggplot(subset, aes(longitude, freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(-130,-70), ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(-130,-70), ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian( ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop75.inf)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop_75.inf)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop_75.inf)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.3))
ggplot(subset, aes(life_expectancy, freq_pop_75.inf)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.3))
ggplot(subset, aes(life_expectancy, freq_pop_75.inf)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3)
ggplot(subset, aes(life_expectancy, freq_pop_75.inf)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(60,90), ylim=c(0,.5))
ggplot(subset, aes(life_expectancy, freq_pop_75.inf)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(60,90), ylim=c(0,.5))
ggplot(subset, aes(median_inc, freq_pop_75.inf)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3)
ggplot(subset, aes(median_indiv_inc, freq_pop_75.inf)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3)
ggplot(subset, aes(median_indiv_income, freq_pop_75.inf)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3)
ggplot(subset, aes(median_indiv_income, freq_pop_75.inf)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(0,120000), ylim=c(0,.5))
ggplot(subset, aes(freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59, rpp)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) #+ coord_cartesian(xlim=c(0,120000), ylim=c(0,.5))
ggplot(subset, aes(rpp, freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) #+ coord_cartesian(xlim=c(0,120000), ylim=c(0,.5))
ggplot(subset, aes(rpp, freq_pop_45.49 + freq_pop_50.54)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) #+ coord_cartesian(xlim=c(0,120000), ylim=c(0,.5))
ggplot(subset, aes(latitude, freq_pop_45.49 + freq_pop_50.54)) + geom_point(color="royalblue3", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.5))
ggplot(subset, aes(rpp, freq_pop_45.49 + freq_pop_50.54)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) #+ coord_cartesian(xlim=c(0,120000), ylim=c(0,.5))
ggplot(subset, aes(rpp, freq_pop_45.49 + freq_pop_50.54)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(75,120), ylim=c(0,.5))
ggplot(subset, aes(freq_pop_45.49 + freq_pop_50.54 + freq_pop_55.59)) + geom_density(color="red", fill="red", alpha=0.4) + theme(legend.position="none")
ggplot(subset, aes(freq_pop_45.49 + freq_pop_50.54)) + geom_density(color="red", fill="red", alpha=0.4) + theme(legend.position="none")
ggplot(subset, aes(rpp, life_expectancy)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) #+ coord_cartesian(xlim=c(75,120), ylim=c(0,.5))
ggplot(subset, aes(rpp, life_expectancy)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(75,120), ylim=c(62.5,.90))
ggplot(subset, aes(rpp, life_expectancy)) + geom_point(color="coral1", fill="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(75,120), ylim=c(62.5,90))
ggplot(subset, aes(rpp, life_expectancy)) + geom_point(color="coral1", fill="darkorchid1", alpha=0.3) + coord_cartesian(xlim=c(75,120), ylim=c(62.5,90))
ggplot(subset, aes(rpp, life_expectancy)) + geom_point(color="darkorchid1", alpha=0.3) + coord_cartesian(xlim=c(75,120), ylim=c(62.5,90))
ggplot(subset, aes(latitude, freq_pop_45.49 + freq_pop_50.54)) + geom_point(color="royalblue3", alpha=0.3) + coord_cartesian(xlim=c(25,50), ylim=c(0,.5))
ggplot(subset, aes(freq_pop_45.49 + freq_pop_50.54)) + geom_density(color="cyan3", fill="cyan3", alpha=0.4) + theme(legend.position="none")
rm(list=ls())
getwd()
setwd("/Users/wigasper/Documents/Classes/BIOL4140/alamar_blue")
getwd()
library(ggplot2)
data <- read.csv("results.csv")
p <- ggplot(data, aes(x=X0, y=X100)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Ethanol (Percent)", y="Viability Index (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p
p <- p + coord_cartesian(ylim=c(0,100))
p
data <- read.csv("results.csv")
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100))
p
p <- p + coord_cartesian(ylim=c(0,100)) scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p
data <- read.csv("results.csv")
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p
p <- p + coord_cartesian(ylim=c(0,100), xlim=c(0,10)) + scale_x_log10()
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100), xlim=c(0,10)) + scale_x_log10()
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,1))
p
View(data)
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(0.00001,100))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p
p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p
data <- read.csv("results.csv")
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
library(ggplot2)
data <- read.csv("results.csv")
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
data <- read.csv("results.csv")
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
data <- read.csv("results.csv")
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor,color="DodgerBlue3", alpha=.8)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.8)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.8, width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.5)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.5, width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.6, width=.2, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.6, width=.1, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.6, width=.07, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.6, width=.07, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.6, width=.07, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Trypan Blue Concentration (mM)", y="Relative Fluorescence (Percent)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.7, width=.07, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Triton X Concentration (mM)", y="Relative Fluorescence (%)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.7, width=.07, position=position_dodge(0.05))
p
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Triton-X Concentration (mM)", y="Relative Fluorescence (%)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.7, width=.07, position=position_dodge(0.05))
p
tiff("results_graph.tiff", units="in", width=5, height=4, res=300)
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Triton-X Concentration (mM)", y="Relative Fluorescence (%)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.7, width=.07, position=position_dodge(0.05))
p
dev.off()
tiff("results_graph.tiff", units="in", width=5, height=4, res=300)
p <- ggplot(data, aes(x=tryp, y=fluor)) + geom_point(color="DodgerBlue3", alpha=.7)
p <- p + labs(title="", x="Triton-X Concentration (mM)", y="Relative Fluorescence (%)") + geom_line(color="DodgerBlue3", alpha=.8)
#p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), width=.2, position=position_dodge(0.05))
#p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_log10()
p <- p + coord_cartesian(ylim=c(0,100)) + scale_x_continuous(trans="log10", limits=c(NA,NA))
p <- p + geom_errorbar(aes(ymin=fluor-stderr, ymax=fluor+stderr), color="DodgerBlue3", alpha=.7, width=.05, position=position_dodge(0.05))
p
dev.off()
